filename,lines,title,comment
/src/main/java/org/crprojects/NumberConversion.java,72:84-72:84,,The error is returned and represented in the same way as a valid value. The caller must inspect the return string in order to know if the conversion has been performed correctly. Using a error mechanism or an Either type would be a better design choice.
/src/main/java/org/crprojects/NumberConversion.java,5:60-5:60,,"I think a single data structure that ties the two values together is slightly better. In this case the number of cases and the order can be considered static and clearly mapped, but in general a list of pairs, an hashmap or something similar. This would avoid potential bugs tied to a different length of the two lists or a wrong order (that would create a wrong mapping between deciamal and roman ""digit""). Additionally, a single structure would be clearer to read, as it expresses the mapping between the arabian number and the roman ones."
/src/main/java/org/crprojects/NumberConversion.java,99:55-99:55,,Same comment as before: the caller cannot distinguish a completed conversion from an error without inspecting the resulting String. The usage of errors or better types would improve the situation.
/src/main/java/org/crprojects/NumberConversion.java,88:73-88:78,,"The method description is wrong, it should tell that it converts a positive integer value to another integer value in a potentially different base."
/src/main/java/org/crprojects/NumberConversion.java,91:79-91:79,,The input description lacks to specify that the input decimal has to be positive.
/src/main/java/org/crprojects/NumberConversion.java,57:54-57:55,,"The value 8 is wrong, an hexadecimal base should be 16."
/src/main/java/org/crprojects/NumberConversion.java,93:69-93:69,,"As the function can return a string describing an error, the return statement in the javadoc should reflect this."
/src/main/java/org/crprojects/NumberConversion.java,92:66-92:66,,"The proposed algorithm works only for base values greater than 1. If this is the intended behaviour, the Javadoc should add this constraint in the base parameter specification and an additional check should be added at the beginning of the method."
/src/main/java/org/crprojects/NumberConversion.java,71:18-71:19,,"The comparison symbol should be ""less or equal"" and not only less in order to comply with the specification. At the moment using a zero value returns an empty string. While this is correct according to the encoding of roman numbers, the specification explicitly disallow the value zero fo the input. For this reason the value should be filtered out."