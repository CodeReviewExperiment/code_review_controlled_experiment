filename,lines,title,comment
/src/main/java/org/crprojects/TodoListApp.java,132:0-133:0,Breakup Method,"Would add an enum with the possible actions, and name choice requestedAction or something more descriptive."
/src/main/java/org/crprojects/TodoListApp.java,111:0-112:0,,"After creating enum, would return the enum representing the action rather than the int."
/src/main/java/org/crprojects/TodoListApp.java,134:0-138:48,,"it's small enough now so not necessary, but consider moving each of these actions into their own functions. This will be especially helpful if more actions are added later, or actions become more complex.\n\nie: \ncase ADD_TASK:\n    add_task()\n \ncase DELETE_TASK:\n    delete_task()\n\netc.\n     "
/src/main/java/org/crprojects/TodoListApp.java,42:0-43:0,,Doesn't check for negative indexes. App crashes on negative input. The same goes for other places where index is checked. A common isValidTask function may be helpful so the index logic can be fixed and kept in one place.
/src/main/java/org/crprojects/TodoListApp.java,171:1-172:0,Consistency of user actions across functions,"printMenu and the switch(choice) block in interactWithApp are coupled, and need to stay in sync. \nYou can do something like so:\n\nenum UserAction {\n    ADD_TASK(""1. Add Task""),\n    TOGGLE_TASK(""2. Mark Task as Done/Undone""),\n...\n}\n\nThen you could add an ordered map of integers to tasks, and loop through that list in printMenu. In this way descriptions are written right in the enum so it should be easier to keep the descriptions and implementations consistent."
/src/main/java/org/crprojects/TodoListApp.java,107:0-108:0,Superfluous ,"Scanner is a member variable, so the function has access to it anyways, no need to pass it in.\n\nAnother option is to make the function static as it doesn't look like it relies on anything from the class outside of the scanner."