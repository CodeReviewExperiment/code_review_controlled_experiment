filename,lines,title,comment
/number_conversion.py,29:0-29:51,,"You're using type hints for the  return type, but not for the parameters. Using them also for the parameters lets users of this function know that the possible values of `format_type` are only the four supported ones.\n\nIt's also weird to return a string for the non-roman formats."
/number_conversion.py,31:8-31:17,,"In this case, wouldn't it be better to raise an exception? By returning an empty string, there's the risk of introducing bugs because it might fail silently when passing an unsupported `format_type`."
/number_conversion.py,37:4-37:20,,"Python 3.10 introducede pattern matching (match statement), which you could use instead of this dictionary approach."
/number_conversion.py,46:0-46:79,,"Also here, raising an exception might be better than simply returning a string with the error message."
/number_conversion.py,36:36-36:64,,"This call should pass 16 as base, not 8."
/number_conversion.py,58:4-59:63,,"Considering that the tests only  cover bases 2, 8, and 16, here you could only allow those three bases, regardless of whether the program might support other ones. Either that or you should also test the other bases.\n\nMoreover, again it might be better to raise an exception instead of returning a string with the error message."
/number_conversion.py,62:8-62:47,,It might be better to raise an exception instead of returning a string with the error message.
/number_conversion.py,68:8-71:35,,"This part is kind of obscure to me, there are three magic numbers and no explanations. I think a few comments could help clarify what this part does. This could also be extracted into a separate function, so the name of that function could already give insight into what it does."
/number_conversion.py,45:4-45:31,,"Given the error message below, this condition is wrong. It includes 0 and 4000 as valid inputs.\nFor input 0, this function returns an empty string."
/number_conversion.py,54:0-54:52,,"After adding more tests, it's clear that this function does not work at all for hexadecimal. I'm not sure what the issue is, but refactoring the code into smaller and clearer functions could help debugging it."